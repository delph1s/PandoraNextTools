# Generated by Django 5.0.1 on 2024-01-12 08:59

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="用户ID",
                        primary_key=True,
                        serialize=False,
                        verbose_name="用户ID",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        db_index=True,
                        help_text="用户账号",
                        max_length=150,
                        unique=True,
                        verbose_name="用户账号",
                    ),
                ),
                (
                    "password",
                    models.CharField(help_text="密码", max_length=128, verbose_name="密码"),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="邮箱",
                        max_length=255,
                        null=True,
                        unique=True,
                        verbose_name="邮箱",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        default="", help_text="姓名", max_length=40, verbose_name="姓名"
                    ),
                ),
                (
                    "gender",
                    models.SmallIntegerField(
                        choices=[(0, "unknown"), (1, "male"), (2, "female")],
                        default=0,
                        help_text="性别",
                        verbose_name="性别",
                    ),
                ),
                (
                    "remark",
                    models.TextField(help_text="备注", null=True, verbose_name="备注"),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=False,
                        help_text="指定该用户是否应被视为活跃。取消选择这个，而不是删除账户。",
                        verbose_name="用户是否激活",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户表",
                "verbose_name_plural": "用户表",
                "db_table": "TB_PERMISSION_USER",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        help_text="ID",
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "creator",
                    models.CharField(
                        blank=True,
                        help_text="该记录最后修改者",
                        max_length=36,
                        null=True,
                        verbose_name="修改人",
                    ),
                ),
                (
                    "create_datetime",
                    models.DateTimeField(auto_now_add=True, null=True, verbose_name=""),
                ),
                (
                    "group",
                    models.ForeignKey(
                        db_constraint=False,
                        help_text="组",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usergroups_group",
                        to="auth.group",
                        verbose_name="组",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        db_constraint=False,
                        help_text="用户",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usergroups_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户与组关系",
                "verbose_name_plural": "用户与组关系",
                "db_table": "TB_PERMISSION_USERPROFILE_GROUPS",
                "ordering": ("create_datetime",),
            },
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="用户所属的组。一个用户将获得其每个组的所有权限。",
                related_name="user_set",
                related_query_name="user",
                through="permission.UserGroup",
                to="auth.group",
                verbose_name="用户组",
            ),
        ),
        migrations.CreateModel(
            name="UserPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        help_text="ID",
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "creator",
                    models.CharField(
                        blank=True,
                        help_text="该记录最后修改者",
                        max_length=36,
                        null=True,
                        verbose_name="修改人",
                    ),
                ),
                (
                    "create_datetime",
                    models.DateTimeField(auto_now_add=True, null=True, verbose_name=""),
                ),
                (
                    "permission",
                    models.ForeignKey(
                        db_constraint=False,
                        help_text="权限",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="userpermission_permission",
                        to="auth.permission",
                        verbose_name="权限",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        db_constraint=False,
                        help_text="用户",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="userpermission_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户与权限关系",
                "verbose_name_plural": "用户与权限关系",
                "db_table": "TB_PERMISSION_USER_PERMISSIONS",
                "ordering": ("create_datetime",),
            },
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="该用户的具体权限。",
                related_name="user_set",
                related_query_name="user",
                through="permission.UserPermission",
                to="auth.permission",
                verbose_name="用户权限",
            ),
        ),
    ]
